%!PS

/input (%stdin) (r) file def
/next-line {
	input 256 string readline pop
	(=) search not { pop exit } if pop pop
	(..) search pop /min-x exch cvi def pop
	(, y=) search pop /max-x exch cvi def pop
	(..) search pop /min-y exch cvi def pop
	/max-y exch cvi def
} def

/hit {
	dup min-y ge exch max-y le and exch
	dup min-x ge exch max-x le and and
} def
/miss {
	min-y lt 1 index max-x gt or
	exch min-x lt dx 0 le and or
} def

{ next-line
	<< /PageSize [ max-x 2 add min-y dup 1 add mul 2 idiv max-y sub 2 add ] >> setpagedevice
	1 min-y neg 1 add translate
	0 0
	max-x -1 1 { /dx0 exch def min-y neg -1 min-y { /dy0 exch def
		/dy dy0 def
		/dx dx0 def
		newpath 0 0 moveto
		{
			currentpoint hit {
				1 add dy0 2 index gt { exch pop dy0 exch } if
				dy0 dy sub 1 sub 10 mod 10 div 1 1 sethsbcolor eofill
				exit
			} if
			currentpoint miss { exit } if
			dx dy
			dy0 0 gt { rlineto } { rmoveto } ifelse
			currentpoint 2 copy .5 0 360 arc moveto
			/dy dy 1 sub def
			dx 0 gt { /dx dx 1 sub def } if
		} loop
	} for } for

	0.3 setlinewidth [1 1 2 1] 0 setdash 0 setgray
	newpath 0 0 moveto max-x 0 lineto stroke
	showpage

	exch dup 1 add mul 2 idiv = =
} loop
